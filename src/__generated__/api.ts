/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/sites/get-key-site": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: operations["sites.getSite"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/sites/register-build": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: operations["sites.registerBuild"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/metadata/get-latest": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: operations["metadata.getLatest"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
}
export type webhooks = Record<string, never>;
export interface components {
  schemas: never;
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
  "sites.getSite": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": {
            site: {
              id: string;
              name: string;
              hostname: string;
              titleTemplate: string | null;
              autoScrapeEnabled: boolean;
              autoAcceptAiSuggestions: boolean;
            };
          };
        };
      };
    };
  };
  "sites.registerBuild": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": {
          buildId: string;
          /** @enum {unknown} */
          framework?: "next" | "tanstack-start";
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": {
            success: boolean;
            message: string;
          };
        };
      };
    };
  };
  "metadata.getLatest": {
    parameters: {
      query: {
        path: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": {
            metadata: {
              title: string | null;
              description: string | null;
              openGraph: {
                title: string | null;
                description: string | null;
                image: {
                  url: string;
                  alt: string | null;
                  width: number | null;
                  height: number | null;
                } | null;
                images: {
                  url: string;
                  alt: string | null;
                  width: number | null;
                  height: number | null;
                }[];
              };
              twitter: {
                title: string | null;
                description: string | null;
                card: ("summary" | "summary_large_image") | null;
                image: {
                  url: string;
                  alt: string | null;
                  width: number | null;
                  height: number | null;
                } | null;
                images: {
                  url: string;
                  alt: string | null;
                  width: number | null;
                  height: number | null;
                }[];
              };
            };
          };
        };
      };
    };
  };
}
